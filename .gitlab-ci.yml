stages:
  - lint
  - test
  - deploy

lint:
  stage: lint
  image: node:20
  before_script:
    - npm i -g pnpm
    - pnpm install
  script:
    - pnpm run lint

test:
  stage: test
  image: node:20
  before_script:
    - npm i -g pnpm
    - pnpm install
  script:
    - pnpm run test

deploy-prod:
  stage: deploy
  image: alpine:latest
  script:
    - apk update && apk add openssh-client rsync
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SERVER_SSH" | tr -d '\r' | ssh-add -
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    - chmod +x generate-env.sh
    - ./generate-env.sh
    - rsync -avz . $SERVER_USER@$SERVER_IP:$SERVER_PATH
    - |
      ssh -v $SERVER_USER@$SERVER_IP "
        export PATH='/home/deployer/.nvm/versions/node/v20.16.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'
        bash -c 'cd $SERVER_PATH && pnpm install && pnpm run build && sudo systemctl restart frontend-prod.service'
      "
  environment:
    name: production
  only:
    - main
  tags:
    - deployment

deploy-dev:
  stage: deploy
  image: alpine:latest
  script:
    - apk update && apk add openssh-client rsync
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SERVER_SSH" | tr -d '\r' | ssh-add -
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    - chmod +x generate-env.sh
    - ./generate-env.sh
    - rsync -avz . $SERVER_USER@$SERVER_IP:$SERVER_PATH
    - |
      ssh -v $SERVER_USER@$SERVER_IP "
        export PATH='/home/deployer/.nvm/versions/node/v20.16.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'
        bash -c 'cd $SERVER_PATH && pnpm install && pnpm run build && sudo systemctl restart frontend-dev.service'
      "
  environment:
    name: dev
  only:
    - dev
  tags:
    - deployment
